<?xml version="1.0" encoding="UTF-8"?>

<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="ehcache.xsd"> 
	<diskStore path="java.io.tmpdir" />
	  <defaultCache maxElementsInMemory="1000" eternal="true"  
        timeToIdleSeconds="120" timeToLiveSeconds="120" overflowToDisk="true"  
        diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"  
        diskPersistent="true" diskExpiryThreadIntervalSeconds="120"  
        memoryStoreEvictionPolicy="LRU">  
    </defaultCache>  
 <!--  <cacheManagerPeerProviderFactory
            class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
            properties="peerDiscovery=automatic, multicastGroupAddress=224.1.1.1,
            multicastGroupPort=1000, timeToLive=0"/>
    <cacheManagerPeerListenerFactory
            class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory"
            properties="hostName=localhost,port=3000,socketTimeoutMillis=120000"/> -->
 <!--         
     //默认缓存  
     <defaultCache maxElementsInMemory="1000" eternal="true"  
        timeToIdleSeconds="120" timeToLiveSeconds="120" overflowToDisk="true"  
        diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"  
        diskPersistent="true" diskExpiryThreadIntervalSeconds="120"  
        memoryStoreEvictionPolicy="LRU">  
     </defaultCache>  
      
      
    //demo缓存  
    <cache name="myCache" maxElementsInMemory="1000" eternal="false"  
        timeToIdleSeconds="120" timeToLiveSeconds="120" overflowToDisk="true"  
        diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"  
        diskPersistent="false" diskExpiryThreadIntervalSeconds="120"  
        memoryStoreEvictionPolicy="LRU">  
       <cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
                                   properties="replicateAsynchronously=true, replicatePuts=true,
                            replicatePutsViaCopy=true, replicateUpdates=true,
                            replicateUpdatesViaCopy=true, replicateRemovals=true,
                            asynchronousReplicationIntervalMillis=200"/>
       // 用于在初始化缓存，以及自动设置
        <bootstrapCacheLoaderFactory class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory"/>
    </cache>   -->
	  <cacheManagerPeerProviderFactory
             class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
             properties="peerDiscovery=manual,
         rmiUrls=//localhost:40005/priceLibCache"/>
  
    <cacheManagerPeerListenerFactory
             class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory"
             properties="hostName=localhost,port=40006, socketTimeoutMillis=2000"/> 

     <cache
             name="priceLibCache"
             maxElementsInMemory="200000"
             eternal="true"
             overflowToDisk="true">
         <cacheEventListenerFactory
                 class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
                 properties="replicateAsynchronously=true, replicatePuts=true,
                             replicatePutsViaCopy=true, replicateUpdates=true,
                             replicateUpdatesViaCopy=true, replicateRemovals=true,
                             asynchronousReplicationIntervalMillis=200"/>
         <bootstrapCacheLoaderFactory
                 class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory"/>
     </cache>
	
<!-- 	<cache name="myCache"  eternal="true" maxElementsInMemory="200000" overflowToDisk="true">
		<cacheEventListenerFactory  
            class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"  
            properties="replicateAsynchronously=false, replicatePuts=true,  
                            replicatePutsViaCopy=true, replicateUpdates=true,  
                            replicateUpdatesViaCopy=true, replicateRemovals=true,  
                            asynchronousReplicationIntervalMillis=200" />  
        <bootstrapCacheLoaderFactory  
            class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory" />  
	</cache> -->
</ehcache>