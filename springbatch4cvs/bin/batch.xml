<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
						http://www.springframework.org/schema/beans/spring-beans.xsd  
						http://www.springframework.org/schema/tx  
						http://www.springframework.org/schema/tx/spring-tx.xsd  
						http://www.springframework.org/schema/aop  
						http://www.springframework.org/schema/aop/spring-aop.xsd  
						http://www.springframework.org/schema/context  
						http://www.springframework.org/schema/context/spring-context.xsd
					    http://www.springframework.org/schema/batch 
				        http://www.springframework.org/schema/batch/spring-batch.xsd
				        http://www.springframework.org/schema/jdbc 
				        http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd"
  default-autowire="byName">  
  <import resource="classpath:applicationContext-ehcache.xml" />
  <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
  
   <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">  
	</bean>  
	
   <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
	   <property name="jobRepository" ref="jobRepository" />
   </bean>
   
   <batch:job id="csvJob">
        <batch:step id="csvStep">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:chunk reader="csvItemReader" writer="csvItemWriter" processor="csvItemProcessor" commit-interval="1">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job> 
    
    <bean id="csvItemReader"
        class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="classpath:inputFile.csv"/>
        <property name="lineMapper">
            <bean
                class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer" ref="lineTokenizer"/>
                <property name="fieldSetMapper">
                    <bean
                        class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="student"></property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    
    <bean id="student" class="com.neusoft.springbatch.sample.cvs.Student" scope="prototype"></bean>
    
     <bean id="csvItemProcessor" class="com.neusoft.springbatch.sample.cvs.CsvItemProcessor"  scope="step"></bean> 
    
     <bean id="lineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value=","/>
        <property name="names">
            <list>
                <value>ID</value>
                <value>name</value>
                <value>age</value>
                <value>score</value>
            </list>
        </property>
    </bean>
    
    <!-- 写CSV文件 -->
    <bean id="csvItemWriter"
        class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="file:src/outputFile.csv"/>
        <property name="lineAggregator">
            <bean
                class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=","></property>
                <property name="fieldExtractor">
                    <bean
                        class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="name,age,score"></property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
</beans>